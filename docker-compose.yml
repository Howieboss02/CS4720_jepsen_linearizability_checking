# Docker Compose setup for Redis Sentinel Jepsen testing
# Alternative to Vagrant for containerized testing environment

version: '3.8'

services:
  # Redis Primary
  redis-primary:
    image: redis:7.0.15-alpine
    hostname: redis-primary
    container_name: jepsen-redis-primary
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis-primary.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-primary-data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-network
    restart: unless-stopped

  # Redis Replica 1
  redis-replica1:
    image: redis:7.0.15-alpine
    hostname: redis-replica1
    container_name: jepsen-redis-replica1
    ports:
      - "6380:6379"
    volumes:
      - ./docker/redis-replica1.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-replica1-data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-network
    depends_on:
      - redis-primary
    restart: unless-stopped

  # Redis Replica 2
  redis-replica2:
    image: redis:7.0.15-alpine
    hostname: redis-replica2
    container_name: jepsen-redis-replica2
    ports:
      - "6381:6379"
    volumes:
      - ./docker/redis-replica2.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-replica2-data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-network
    depends_on:
      - redis-primary
    restart: unless-stopped

  # Redis Replica 3
  redis-replica3:
    image: redis:7.0.15-alpine
    hostname: redis-replica3
    container_name: jepsen-redis-replica3
    ports:
      - "6382:6379"
    volumes:
      - ./docker/redis-replica3.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-replica3-data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-network
    depends_on:
      - redis-primary
    restart: unless-stopped

  # Redis Replica 4
  redis-replica4:
    image: redis:7.0.15-alpine
    hostname: redis-replica4
    container_name: jepsen-redis-replica4
    ports:
      - "6383:6379"
    volumes:
      - ./docker/redis-replica4.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-replica4-data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - redis-network
    depends_on:
      - redis-primary
    restart: unless-stopped

  # Sentinel 1
  redis-sentinel1:
    image: redis:7.0.15-alpine
    hostname: redis-sentinel1
    container_name: jepsen-redis-sentinel1
    ports:
      - "26379:26379"
    volumes:
      - ./docker/sentinel1.conf:/usr/local/etc/redis/sentinel.conf
    command: sh -c "cp /usr/local/etc/redis/sentinel.conf /tmp/sentinel.conf &&
         redis-sentinel /tmp/sentinel.conf"
    networks:
      - redis-network
      - redis-sentinel-network
    depends_on:
      - redis-primary
      - redis-replica1
      - redis-replica2
      - redis-replica3
      - redis-replica4
    restart: unless-stopped

  # Sentinel 2
  redis-sentinel2:
    image: redis:7.0.15-alpine
    hostname: redis-sentinel2
    container_name: jepsen-redis-sentinel2
    ports:
      - "26380:26379"
    volumes:
      - ./docker/sentinel2.conf:/usr/local/etc/redis/sentinel.conf
    command: sh -c "cp /usr/local/etc/redis/sentinel.conf /tmp/sentinel.conf &&
         redis-sentinel /tmp/sentinel.conf"
    networks:
      - redis-network
      - redis-sentinel-network
    depends_on:
      - redis-primary
      - redis-replica1
      - redis-replica2
      - redis-replica3
      - redis-replica4
    restart: unless-stopped

  # Sentinel 3
  redis-sentinel3:
    image: redis:7.0.15-alpine
    hostname: redis-sentinel3
    container_name: jepsen-redis-sentinel3
    ports:
      - "26381:26379"
    volumes:
      - ./docker/sentinel3.conf:/usr/local/etc/redis/sentinel.conf
    command: sh -c "cp /usr/local/etc/redis/sentinel.conf /tmp/sentinel.conf &&
         redis-sentinel /tmp/sentinel.conf"
    networks:
      - redis-network
      - redis-sentinel-network
    depends_on:
      - redis-primary
      - redis-replica1
      - redis-replica2
      - redis-replica3
      - redis-replica4
    restart: unless-stopped

  # Jepsen Control Node
  jepsen-control:
    build:
      context: .
      dockerfile: docker/Dockerfile.jepsen
    hostname: jepsen-control
    container_name: jepsen-control
    volumes:
      - .:/jepsen-redis
      - jepsen-results:/results
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /jepsen-redis
    networks:
      - redis-network
    depends_on:
      - redis-primary
      - redis-replica1
      - redis-replica2
      - redis-replica3
      - redis-replica4
      - redis-sentinel1
      - redis-sentinel2
      - redis-sentinel3
    environment:
      - REDIS_NODES=redis-primary,redis-replica1,redis-replica2,redis-replica3,redis-replica4
      - SENTINEL_NODES=redis-sentinel1,redis-sentinel2,redis-sentinel3
    command: tail -f /dev/null  # Keep container running

  # Chaos Engineering Node (for fault injection)
  chaos-monkey:
    image: alpine:latest
    hostname: chaos-monkey
    container_name: chaos-monkey
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/chaos-scripts:/chaos-scripts:ro
    networks:
      - redis-network
    privileged: true
    command: tail -f /dev/null
    depends_on:
      - redis-primary
      - redis-replica1
      - redis-replica2
      - redis-replica3
      - redis-replica4

networks:
  redis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  redis-sentinel-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  redis-primary-data:
  redis-replica1-data:
  redis-replica2-data:
  redis-replica3-data:
  redis-replica4-data:
  jepsen-results: